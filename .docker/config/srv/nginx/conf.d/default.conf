#/etc/nginx/conf.d/default.conf
########

    # server
    server {

        ############
        # directives
        # *.sample.com, *.sample.*
        # server_name ~^(www|host1).*\.example\.com$;
        # server_name ~^(subdomain|set|www|host1).*\.example\.com$;
        #server_name  _; 
   #     listen  80 default_server; 
   #     listen [::]:80 default_server;
   
        root  /var/www/html;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        error_page 404 /404.html;
        index index.$geo.html index.htm index.html;
        gzip on;
        gunzip on; #enable decompression on-the-fly
        gzip_types text/plain application/xml;
        gzip_min_length 1000;
        gzip_proxied no-cache no-store private expired auth;
        #########################
        # Generate SSL Settings #
        #########################
        #
       
        ##
        # SSL Settings
        ##
        listen 443 ssl;
        server_name         docker;
        ssl_certificate     /etc/ssl/certs/docker.crt;
        ssl_certificate_key /etc/ssl/private/docker.key; #lets encrypt
        #ssl_verify_client   on;
        #ssl_trusted_certificate /etc/ssl/cachain.pem;
        #ssl_ocsp                on; # Enable OCSP validation
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ######
        # ddos
        # https://nginx.org/en/docs/http/ngx_http_limit_req_module.html
        #limit_req_zone $binary_remote_addr zone=myzone:10m rate=30r/m;
        #limit_conn_zone $binary_remote_addr zone=addr:10m;
        ###########
        # use infos from HAproxy for examples
        # try with curl <server> --haproxy-protocol
        #
        # listen 80  proxy_protocol;
        # listen 443  ssl proxy_protocol;
        # set_real_ip_from localhost;
        # real_ip_header proxy_protocol;
        ###
        #######
        # cache from proxyed remote server
        #
        # proxy_cache my_cache;
        # proxy_cache_use_stale error timeout updating http_500 http_502;
        # proxy_ignore_headers Set-Cookie;
        # proxy_set_header Host $host;                       
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_cache_min_uses 5;
        # proxy_cache_key "$host$request_uri$cookie_user";
        # proxy_cache_valid 200 302 10m;
        # proxy_cache_valid 404      1m;
        ##################
        #    locations   #
        ##################
        # http://nginx.org/en/docs/http/ngx_http_core_module.html#location
        # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
        #
        # 1) /prefix/beginning/path
        # or
        # 2) ~ ^regex/url/matching$
        #
        # priority: =, prefix, ^=(except), regex
        #
        location = / { 
            internal; #redirection interne
            # ...
            #limit_req zone=myzone; #ddos
            #limit_conn addr 10;
            allow 192.168.1.0/24;
            deny 123.123.123.0/28;
            deny all;
            limit_except PUT POST DELETE {
                # For requests that *aren't* a PUT, POST, or DELETE,
                # pass to :9080
                proxy_pass http://apache:80;
            }
        }
        ##############
        # static pages
        location = /static.tryit { 
            try_files /var/www/html/index.html /;
            alias /var/mydirectory/myapp/static/;
            autoindex on;
            expires 30s;
            gzip_static on;
        }
        # /i/top.gif -> /data/w3/images/top.gif
        location /i/ { 
            alias /data/w3/images/;
        }
        location /permanently/moved/url { 
            return 301 http://www.example.com/moved/here;
        }
        # mean: don't match further regexs for /images/(etc...)
        location ^~ /images/ { 
            #match /images/1.gif
        }
        location ~* ^.+\.(?:css|js|jpe?g|gif)$ {
            # try files instead of apache rewrites (...)
            ############
            # ex foo/42/bar/toto?page=2&nb=100
            # $uri : "foo/42/bar/toto"
            # $args : "page=2&nb=100"
            # 
            # try $file then $directory then $url+$arg
            ############
            try_files $uri $uri/ /index.php$is_args$args @backend;
            #try_files $uri $uri/ /index.php?q=$uri&$args;
            if (!-e $request_filename){
                rewrite ^(.*)$ /index.php?q=$1 break;
            }
        }
        location @backend {
            #http://apache/backend; doesn't works
            proxy_pass http://apache; #work
        }
        #########
        # REWRITE
        # /static.rewrite/tryit -> /nginx.php
        location ~ ^/static/? {
            add_header location "debug location: static_block";
            rewrite ^/static(.*)$ /nginx.php last;
            #break, last, redirect, permanent;
            ########
            # LAST #
            rewrite ^(/download/.*)/media/(\w+)\.?.*$ $1/mp3/$2.mp3 last;
            # change the old url, and process with rewrited one
            rewrite ^(/download/.*)/audio/(\w+)\.?.*$ $1/mp3/$2.ra  last;
            # if this last doesn't match then finally 403;
            return  403;
        }
        # sub-filter
        # modify text INSIDE http reponse
        location /sub {
            sub_filter     'href="http://127.0.0.1:8080/'    'href="https://$host/';
            sub_filter     'img src="http://127.0.0.1:8080/' 'img src="https://$host/';
            sub_filter_once on;
        }
        # error pages
        location /old/path.html {
            # 404 =301 change return code and redirect
            error_page 404 =301 http:/example.com/fetch/with/error.html;
        }
        location /fetch/with/error.html {
            proxy_pass http://apache/backend;
        }
        # .htaccess apache
        location ~ /\.ht {
            deny all;
        }
        ################
        # proxy apache #
        ################
        location ~* \.php9$ { # (~* case-insensitive)
            proxy_set_header Accept-Encoding "from nginx proxy-mode";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_buffering on;
            proxy_buffers 16 4k; #number and size
            proxy_buffer_size 2k;
            try_files $uri =404;
            proxy_bind $server_addr;
            proxy_pass http://my_own_balancing_apache; #http://apache:80;
        }
        # VS
        ###################
        # fastcgi php-fpm #
        ###################
        location ~ \.ph(p)?$ { # (~ case sensitive)
            location ~ \..*/.*\.php$ {return 404;}
            try_files $uri =404;
            fastcgi_pass  my_own_balancing_fpm;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include  fastcgi_params;
        }
        # disable dir
        location /uploaddir {
            location ~ \.php$ {return 403;}
        }
    }

server {
  listen   81;
  root /var/www_api/public;
  index index.php index.html index.htm;
  server_name api;
  location / {
    try_files $uri $uri/ /index.php?$args;
  }
  error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /var/www_api/public;
  }
  # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  location ~ \.php$ {
    try_files $uri =404;
    fastcgi_pass fpm-api:9000;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }
}

# server {

#         listen   80; ## listen for ipv4; this line is default and implied
#         listen   [::]:80 default; # ipv6only=on; ## listen for ipv6

#         root /var/www/public;
#         index index.php index.html index.htm;

#         # Make site accessible from http://localhost/
#         server_name _;

#         # Disable sendfile as per https://docs.vagrantup.com/v2/synced-folders/virtualbox.html
#         sendfile off;

#         # Add stdout logging
#         error_log /dev/stdout info;
#         access_log /dev/stdout;

#         # Add option for x-forward-for (real ip when behind elb)
#         #real_ip_header X-Forwarded-For;
#         #set_real_ip_from 172.16.0.0/12;

#         # block access to sensitive information about git
#         location /.git {
#            deny all;
#            return 403;
#         }

#         location / {
#                 # First attempt to serve request as file, then
#                 # as directory, then fall back to index.html
#                 try_files $uri $uri/ /index.php?$args; # =404;
#         }

#         error_page 404 /404.html;
#         location = /404.html {
#                 root /var/www/errors;
#                 internal;
#         }

#         location ^~ /sad.svg {
#             alias /var/www/errors/sad.svg;
#             access_log off;
#         }
#         location ^~ /twitter.svg {
#             alias /var/www/errors/twitter.svg;
#             access_log off;
#         }
#         location ^~ /gitlab.svg {
#             alias /var/www/errors/gitlab.svg;
#             access_log off;
#         }

#         # pass the PHP scripts to FastCGI server listening on socket
#         #
#         location ~ \.php$ {
#                 try_files $uri =404;
#                 #fastcgi_split_path_info ^(.+\.php)(/.+)$;
#                 fastcgi_pass unix:/var/run/php-fpm.sock;
#                 fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#                 fastcgi_param SCRIPT_NAME $fastcgi_script_name;
#                 fastcgi_index index.php;
#                 include fastcgi_params;
#         }

#         location ~* \.(jpg|jpeg|gif|png|css|js|ico|webp|tiff|ttf|svg)$ {
#                 expires           5d;
#         }

#         # deny access to . files, for security
#         #
#         location ~ /\. {
#                 log_not_found off;
#                 deny all;
#         }

#         allow all;
#         auth_basic off;
# }