#/etc/nginx/conf.d/default.conf

########
# server
server {

    ############
    # directives
    # *.sample.com, *.sample.*
    # server_name ~^(www|host1).*\.example\.com$;
    # server_name ~^(subdomain|set|www|host1).*\.example\.com$;
    #server_name  _; 
#     listen  80 default_server; 
#     listen [::]:80 default_server;

    root  /var/www/html;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    error_page 404 /404.html;
    index index.$geo.html index.htm index.html;
    gzip on;

    gunzip on; #enable decompression on-the-fly
    gzip_types text/plain application/xml;
    gzip_min_length 1000;
    gzip_proxied no-cache no-store private expired auth;

    # Generate SSL Settings #
    include snippets/ssl.settings.conf;

    ######
    # ddos
    # https://nginx.org/en/docs/http/ngx_http_limit_req_module.html
    #limit_req_zone $binary_remote_addr zone=myzone:10m rate=30r/m;
    #limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    ###########
    # use infos from HAproxy for examples
    # try with curl <server> --haproxy-protocol
    #
    # listen 80  proxy_protocol;
    # listen 443  ssl proxy_protocol;
    # set_real_ip_from localhost;
    # real_ip_header proxy_protocol;
    ###

    # Proxy cache #
    include snippets/proxy.cache.conf;

    ##################
    #    locations   #
    ##################
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#location
    # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
    #
    # 1) /prefix/beginning/path
    # or
    # 2) ~ ^regex/url/matching$
    #
    # priority: =, prefix, ^=(except), regex
    #
    location = / { 
        internal; #redirection interne
        # ...
        #limit_req zone=myzone; #ddos
        #limit_conn addr 10;
        allow 192.168.1.0/24;
        deny 123.123.123.0/28;
        deny all;
        limit_except PUT POST DELETE {
            # For requests that *aren't* a PUT, POST, or DELETE,
            # pass to :9080
            proxy_pass http://apache:80;
        }

        root /var/www-mz/public;
        try_files $uri $uri/ /index.php?$query_string;

        #index index.html index.php; ## Allow a static html file to be shown first
        #try_files $uri $uri/ =404; ## If missing pass the URI to Magento's front handler
        #expires 30d; ## Assume all files are cachable
        # proxy_set_header Host                   $host;
        # proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto      $scheme;
    }

    

    location /permanently/moved/url { 
        return 301 http://www.example.com/moved/here;
    }
    
    
    # statics files #
    include snippets/statics.files.conf;

    location @backend {
        #http://apache/backend; doesn't works
        proxy_pass http://apache; #work
    }

    # sub-filter
    # modify text INSIDE http reponse
    location /sub {
        sub_filter     'href="http://127.0.0.1:8080/'    'href="https://$host/';
        sub_filter     'img src="http://127.0.0.1:8080/' 'img src="https://$host/';
        sub_filter_once on;
    }

    # error pages
    location /old/path.html {
        # 404 =301 change return code and redirect
        error_page 404 =301 http:/example.com/fetch/with/error.html;
    }
    location /fetch/with/error.html {
        proxy_pass http://apache/backend;
    }
    # .htaccess apache
    location ~ /\.ht {
        deny all;
    }

    # Php proxy #
    include snippets/php.proxy.conf;
    
    # Deny access #
    include snippets/deny.access.conf;
}

