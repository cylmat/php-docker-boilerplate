#################
# Statics files #
#################
location ~* ^.+\.(?:css|js|jpe?g|gif)$ {
    # try files instead of apache rewrites (...)
    ############
    # ex foo/42/bar/toto?page=2&nb=100
    # $uri : "foo/42/bar/toto"
    # $args : "page=2&nb=100"
    # 
    # try $file then $directory then $url+$arg
    ############

    expires           5d;
    try_files $uri $uri/ /index.php$is_args$args @backend;
    #try_files $uri $uri/ /index.php?q=$uri&$args;

    if (!-e $request_filename){
        rewrite ^(.*)$ /index.php?q=$1 break;
    }
}

location ~* ^.+\.(?:css|js|jpe?g|gif|svg|ico)$ {
    root /app-static/;
    try_files $uri $uri/ =404;
    access_log off;
    allow all;
    auth_basic off; 

    if (!-e $request_filename){
            rewrite ^(.*)$ /index.php?q=$1 break;
    }
}

#########
# REWRITE
# /static.rewrite/tryit -> /nginx.php
location ~ ^/static/? {
    add_header location "debug location: static_block";
    rewrite ^/static(.*)$ /nginx.php last;
    #break, last, redirect, permanent;
    access_log off;
    allow all;
    auth_basic off; 

    ########
    # LAST #
    rewrite ^(/download/.*)/media/(\w+)\.?.*$ $1/mp3/$2.mp3 last;
    # change the old url, and process with rewrited one
    rewrite ^(/download/.*)/audio/(\w+)\.?.*$ $1/mp3/$2.ra  last;
    # if this last doesn't match then finally 403;
    return  403;
}


##############
# static pages
location = /static.tryit { 
    try_files /app-static /;
    alias /var/mydirectory/myapp/static/;
    autoindex on;

    expires 30s;
    gzip_static on;
}

# /i/top.gif -> /data/w3/images/top.gif
location /i/ { 
    alias /app-static/w3/images/;
    allow all;
    auth_basic off; 
}


# mean: don't match further regexs for /images/(etc...)
location ^~ /images/ { 
    #match /images/1.gif
}
